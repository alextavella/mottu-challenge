services:
  postgres:
    image: postgres:15-alpine
    container_name: mini-ledger-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mini_ledger
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-test-db.sql:/docker-entrypoint-initdb.d/init-test-db.sql
    networks:
      - mini-ledger
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d mini_ledger']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  migrations:
    build: .
    container_name: mini-ledger-migrations
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/mini_ledger'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mini-ledger
    command: ['pnpm', 'db:deploy']
    restart: 'no'

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: mini-ledger-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # Management UI
    networks:
      - mini-ledger

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mini-ledger-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - mini-ledger

  app:
    build: .
    container_name: mini-ledger-app
    restart: unless-stopped
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/mini_ledger'
      RABBITMQ_URL: 'amqp://admin:admin@rabbitmq:5672'
      RABBITMQ_EXCHANGE: 'events'
      RABBITMQ_HEARTBEAT: 60
      RABBITMQ_RECONNECT_ATTEMPTS: 5
      RABBITMQ_RECONNECT_DELAY: 5000
      PORT: 3000
      NODE_ENV: production
      EVENTS_ENABLE_RETRY: true
      EVENTS_RETRY_ATTEMPTS: 3
      EVENTS_RETRY_DELAY: 5000
    ports:
      - '3000:3000'
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_started
    networks:
      - mini-ledger

volumes:
  postgres_data:

networks:
  mini-ledger:
    driver: bridge
